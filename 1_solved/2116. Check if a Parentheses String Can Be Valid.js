/**
 * @param {string} s
 * @param {string} locked
 * @return {boolean}
 */
var canBeValid = function (s, locked, n = s.length) {
    if (n == 1 || n % 2 !== 0) return false;
    if ((s[0] == ")" && locked[0] == "1") || (s[n - 1] == "(" && locked[n - 1] == "1")) return false;
    if (!locked.includes("1")) return true;

    for (let i = 0, debt = 0; i < n; i++) {
        s[i] == ")" && locked[i] == "1" ? debt++ : debt--;
        if (debt > 0) return false;
    }
    for (let i = n - 1, debt = 0; i >= 0; i--) {
        s[i] == "(" && locked[i] == "1" ? debt++ : debt--;
        if (debt > 0) return false;
    }

    return true;
};

console.log(
    canBeValid(
        (s =

        (locked =

    )
);
